// api-server/models/transaction.js
const mongoose = require('mongoose');
const { getNextSequence } = require('./counter');

const transactionSchema = new mongoose.Schema({
  transaction_number: { type: Number, unique: true }, 
  amount: { type: Number, required: true },
  currency: { type: String, required: true, default: 'ZAR' },
  recipient: { type: String, required: true },
  recipient_name: { type: String },
  provider: { type: String, required: true },
  swift_code: { type: String, required: true },
  description: { type: String, default: '' },
  status: { type: String, enum: ['pending', 'verified', 'completed', 'failed'], default: 'pending' },
  user_id: { type: String },
  user_full_name: { type: String },
  payment_date: { type: Date, default: Date.now },
  created_at: { type: Date, default: Date.now },
  updated_at: { type: Date, default: Date.now }
});


transactionSchema.pre('save', async function(next) {
  this.updated_at = Date.now();
  
  if (this.isNew && !this.transaction_number) {
    try {
      this.transaction_number = await getNextSequence('transaction_id');
    } catch (error) {
      return next(error);
    }
  }
  
  next();
});

module.exports = mongoose.model('Transaction', transactionSchema);
